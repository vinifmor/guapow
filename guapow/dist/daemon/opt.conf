# for a system-level service: /etc/guapow/opt.conf
# for a user-level service: /home/user_name/.config/guapow/opt.conf

# port = 5087  # TCP port
# compositor =   # pre-defines the installed compositor. Options: kwin, compiz, marco, picom, compton, nvidia
# scripts.allow_root = false  # allow custom scripts/commands to run at the root level
# check.finished.interval = 3  # finished applications checking interval in seconds
# launcher.mapping.timeout = 60 (maximum time in seconds to look for a process mapped to a different process. This property also affects the period to look for Steam subprocesses.  float values are allowed)
# launcher.mapping.found_timeout = 10 (maximum time in seconds to still keep looking for a process mapped to a different process after a match. This property also affects the period to look for Steam subprocesses.  float values are allowed)
# gpu.cache = false # if 'true': maps all available GPUs on startup. Otherwise, GPUs will be mapped for every request
# gpu.id = # comma separated list of integers representing which GPU cards should be optimized (e.g: 0, 1). If not defined, all available GPUs are considered (default)
# gpu.vendor =  # pre-defines your GPU vendor for faster GPUs mapping. Supported: nvidia, amd
# cpu.performance = false  # set cpu governors and energy policy levels to full performance on startup
# request.allowed_users =  # restricts users that can request optimizations, separated by comma. e.g: root,xpto)
# request.encrypted = true # only accepts encrypted requests for security reasons
# profile.cache = false # cache profile files on demand to skip I/O operations. Changes to profile files require restarting
# profile.pre_caching = false  # loads all existing profile files on disk in memory during the initialization process. Requires 'profile.cache' enabled.
# nice.check.interval = 5  (processes nice levels monitoring interval in seconds)
# optimize_children.timeout: maximum period in seconds to keep looking for the target process children (default: 30). 0 can be defined if children should be ignored.
# optimize_children.found_timeout: maximum period in seconds to still keep looking for the target process children after a child in found (default: 10). 0 can be defined if the search process should be interrupted immediately after a child is found.
